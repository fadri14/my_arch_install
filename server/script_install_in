#!/bin/bash

partition_systeme="$1"
type_ucode="$2"

echo -e "\033[34m--- Activation du compte root ---\033[0m"
echo "root:r" | chpasswd

echo -e "\033[34m--- Changer les paramètres de pacman ---\033[0m"
sed -i 's/#Color$/Color/' /etc/pacman.conf
sed -i 's/#VerbosePkgLists/VerbosePkgLists/' /etc/pacman.conf
sed -i 's/#ParallelDownloads = .$/ParallelDownloads = 4/' /etc/pacman.conf

echo -e "\033[34m--- Changer le flag de compilation ---\033[0m"
cat << EOF >> /etc/makepkg.conf
MAKEFLAGS="-j$(nproc)"
EOF

echo -e "\033[34m--- Installer les paquets de bases ---\033[0m"
pacman --noconfirm -S linux linux-headers linux-firmware networkmanager wireless_tools wpa_supplicant dhcpcd base-devel btrfs-progs polkit efibootmgr mkinitcpio vim zip unzip p7zip man-db man-pages reflector exfat-utils alsa-utils texinfo wget rsync openssh sudo dialog ntp dosfstools ntfs-3g base-devel $type_ucode

echo -e "\033[34m--- Définir le fuseau horaire ---\033[0m"
ln -sf /usr/share/zoneinfo/Europe/Brussels /etc/localtime

echo -e "\033[34m--- Régler l'horloge matérielle ---\033[0m"
hwclock --systohc

echo -e "\033[34m--- Changer les locales ---\033[0m"
sed -i 's/#fr_FR.UTF-8 UTF-8/fr_FR.UTF-8 UTF-8/' /etc/locale.gen

echo -e "\033[34m--- Générer les locales ---\033[0m"
locale-gen

echo -e "\033[34m--- Configurer les locales ---\033[0m"
cat << EOF > /etc/locale.conf
LANG=fr_FR.UTF-8
LC_MESSAGES=fr_FR.UTF-8
EOF

echo -e "\033[34m--- Configurer la console ---\033[0m"
cat << EOF > /etc/vconsole.conf
KEYMAP=fr-bepo
FONT=ter-132b
EOF

echo -e "\033[34m--- Éditer le nom d'hôte ---\033[0m"
cat << EOF > /etc/hostname
archlinux_server
EOF

echo -e "\033[34m--- Configuration du mkinitcpio ---\033[0m"
cat << EOF > /etc/mkinitcpio.conf
BINARIES=(btrfsck)
HOOKS=(base autodetect microcode modconf block keyboard filesystems fsck)
EOF

echo -e "\033[34m--- Recharger la configuration du mkinitcpio ---\033[0m"
mkinitcpio -p linux

echo -e "\033[34m--- Installation de systemd-boot ---\033[0m"
bootctl --esp-path=/boot install

echo -e "\033[34m--- Configuration de systemd-boot ---\033[0m"
cat << EOF > /boot/loader/loader.conf
default arch.conf
editor no
timeout 0
console-mode max
EOF

echo -e "\033[34m--- Configuration de l'entrée d'arch ---\033[0m"
MYUUID=$(ls -l /dev/disk/by-uuid/ | grep $partition_systeme | cut -d ' ' -f9)
cat << EOF > /boot/loader/entries/arch.conf
title My Server Arch Linux !
linux /vmlinuz-linux
initrd intel-ucode.img
initrd /initramfs-linux.img
options root=UUID=$MYUUID rootflags=subvol=root rw
EOF

#echo -en "\033[34m--- Mise en place de la sécurité pour root ---\033[0m\n\n"
# Empêcher le shell root de fonctionner
#sed -i '1 s/root:x:0:0::\/root:\/usr\/bin\/bash/root:x:0:0::\/root:\/usr\/bin\/nologin/' /etc/passwd
## Désactiver la connexion root via le périphérique de console (TTY)
#mv /etc/securetty /etc/securetty.orig
#touch /etc/securetty
#chmod 600 /etc/securetty
# Désactiver la connexion root en ssh
#echo "PermitRootLogin no" >> /etc/ssh/sshd_config

echo -e "\033[34m--- Autorisation de sudo pour le group wheel ---\033[0m"
echo "%wheel ALL=(ALL:ALL) ALL
Defaults:lebotdufutur		!authenticate" >> /etc/sudoers

echo -e "\033[34m--- Mise à jour des mirroirs ---\033[0m"
reflector --latest 10 --sort rate --save /etc/pacman.d/mirrorlist

echo -e "\033[34m--- Installer les paquets pour le serveur ---\033[0m"
pacman --noconfirm -S neovim glances ripgrep fastfetch fish starship git pacman-contrib python-pynvim bash-completion tmux docker docker-compose pkgstats zoxide

echo -e "\033[34m--- Configuration du démon docker ---\033[0m"
mkdir /etc/docker
echo '{
    "storage-driver": "btrfs",
    "userland-proxy" : false,
    "iptables": true,
    "userns-remap": "dockremap",
    "icc": false,
    "no-new-privileges": true
}' > /etc/docker/daemon.json

# Pour que docker vérifie la signature des images
echo "
export DOCKER_CONTENT_TRUST=1" >> /etc/profile

echo -e "\033[34m--- Création de l'utilisateur ---\033[0m"
useradd -m -s /usr/bin/fish -c "I use Arch btw" lebotdufutur
usermod -a -g lebotdufutur -G users,wheel,storage,power,network lebotdufutur
echo "lebotdufutur:l" | chpasswd

echo -e "\033[34m--- Démarrage des services ---\033[0m"
systemctl enable systemd-timesyncd
systemctl enable NetworkManager
systemctl enable ntpd
systemctl enable paccache.timer
systemctl enable systemd-boot-update.service
systemctl enable sshd
systemctl enable docker

echo -e "\033[34m--- Configuration du bouton power ---\033[0m"
sed -i "s/#HandlePowerKey=poweroff/HandlePowerKey=ignore/" /etc/systemd/logind.conf
sed -i "s/#HandlePowerKeyLongPress=ignore/HandlePowerKeyLongPress=poweroff/" /etc/systemd/logind.conf

echo -e "\033[34m--- Installation du script changeTheme ---\033[0m"
chown lebotdufutur:lebotdufutur changeTheme
mv changeTheme /usr/local/bin

# Retire le droit de l'utilisateur à utiliser sudo sans authentification
head -n -1 /etc/sudoers > tmp.txt && mv tmp.txt /etc/sudoers

echo -e "\033[34m--- Sortir du système ---\033[0m"
